language: rust
sudo: false
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - kalakris-cmake
    packages:
    - g++-4.9
    - cmake
    - libcurl4-openssl-dev
    - libelf-dev
    - libdw-dev
rust:
    - stable
    - beta
install:
    - echo $GITHUB_USER_NAME
    - export PATH=$HOME/.local/bin:$PATH:$HOME/local/bin:$HOME/.cargo/bin
    - export CC=gcc-4.9
    - export CXX=g++-4.9
    - export RUSTFLAGS="-C link-dead-code"
    - pip install --user beautifulsoup4
    # Build and cache kcov
    - |
      if [ -f $HOME/local/bin/kcov ]; then
          echo "Using cached kcov from ~/local/bin/kcov"
      else
          mkdir -p $HOME/local
          cd $HOME/local
          wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
          tar xzf master.tar.gz && mkdir kcov-master/build && cd kcov-master/build
          cmake -DCMAKE_INSTALL_PREFIX=$HOME/local ..
          make install
          cd $TRAVIS_BUILD_DIR
      fi
    # Build and cache mdbook
    - |
      if [ -f $HOME/.cargo/bin/mdbook ]; then
          echo "Using cached mdbook from ~/.cargo/bin/mdbook"
      else
          cargo install mdbook
      fi
    # Build and cache cargo-benchcmp
    - |
      if [ -f $HOME/.cargo/bin/cargo-benchcmp ]; then
          echo "Using cached cargo-benchcmp from ~/.cargo/bin/cargo-benchcmp"
      else
          cargo install cargo-benchcmp
      fi
    # Clean any cached test executable
    - cd $TRAVIS_BUILD_DIR
    - rm -f target/debug/*-*
script:
    - cd $TRAVIS_BUILD_DIR
    # link dead code for better coverage generation
    - export RUSTFLAGS='-C link-dead-code'
    # Run all tests in release mode
    - cargo test --all --release
    # Run unit tests and doc tests in debug mode
    - cargo test -p lumol-core
    - cargo test -p lumol-input
    # Check that benchmarks still compile
    - cargo bench --no-run
    # Run benchmarks if __TRAVIS_RUN_BENCHES=[n_commits] appears in the commit msg
    - python scripts/run-benchmarks.py
    # Misc style checking
    - python scripts/check-whitespaces.py
    # Generate and publish coverage
    - |
      if [[ "${TRAVIS_RUST_VERSION}" == "stable" ]]; then
          for test in $(find target/debug/deps/ ! -name "lib*" -type f); do
              kcov --include-pattern=$(pwd) --exclude-pattern=target target/kcov $test
          done
          bash <(curl -s https://codecov.io/bash) -s target/kcov
      fi
    # Generate and check doc
    - ./scripts/generate-docs.sh
    - ./scripts/check-html-book.py doc/book

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GH_TOKEN
  local_dir: target/gh-pages
  email: lumol-bot@lumol.org
  name: Lumol Bot
  on:
    rust: stable
    branch: master

cache:
  cargo: true
  directories:
      - $HOME/local/bin
